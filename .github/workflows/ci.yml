name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  backend:
    name: Backend – tests & linters
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python -
        echo "$HOME/.local/bin" >> $GITHUB_PATH   # add Poetry to PATH

    - name: Cache virtualenv
      uses: actions/cache@v4
      with:
        path: backend/.venv
        key: ${{ runner.os }}-poetry-${{ hashFiles('backend/poetry.lock') }}

    - name: Install deps
      working-directory: backend
      run: poetry install --no-interaction --no-ansi

    - name: Run linters
      working-directory: backend
      run: |
        poetry run ruff check .
        poetry run black --check .
        poetry run mypy app

    - name: Run tests
      working-directory: backend
      run: poetry run pytest -q


  frontend:
    name: Front-end – build only
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Cache node_modules
      uses: actions/cache@v4
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-npm-${{ hashFiles('frontend/package-lock.json') }}

    - name: Install deps and build
      working-directory: frontend
      run: |
        npm ci
        npm run build

